name: Publish Python Package
on:
  push:
    branches:
      - main
    paths: # assume to only publish package when pyproject.toml file changes
      - pyproject.toml
  
env: # default versions
  POETRY_VERSION: 1.3.1
  PYTHON_VERSION: 3.11.2
    
jobs:
  pypi-publish:
    name: Upload release to PyPI
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check if version changed
        id: check-version
        run: |
          VERSION_CHANGED=false
          CURRENT_VERSION=$(cat pyproject.toml | grep -oP '(?<=^version = ")(.*)(?="$)')
          if git show HEAD~1:pyproject.toml 2> /dev/null; then
            PREVIOUS_VERSION=$(git show HEAD~1:pyproject.toml | grep -oP '(?<=^version = ")(.*)(?="$)')
            if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
              VERSION_CHANGED=true
            fi
          else
            VERSION_CHANGED=true
          fi
          echo "changed=$VERSION_CHANGED" >> $GITHUB_ENV
          echo "changed=$VERSION_CHANGED" >> $GITHUB_OUTPUT

      - name: Set Python Version
        if: ${{ steps.check-version.outputs.changed == 'true' }}
        run: |
          if [ -f .python-version ]; then
            echo "PYTHON_VERSION=$(cat .python-version)" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Set Poetry Version
        if: ${{ steps.check-version.outputs.changed == 'true' }}
        run: |
          if [ -f .poetry-version ]; then
            echo "POETRY_VERSION=$(cat .poetry-version)" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Setup Python and Poetry
        if: ${{ steps.check-version.outputs.changed == 'true' }}
        uses: ./.github/actions/setup-python-poetry
        with:
          python-version: ${{env.PYTHON_VERSION}}
          poetry-version: ${{env.POETRY_VERSION}}
          install-deps: true
          only-dev-deps: true

      - name: Build
        if: ${{ steps.check-version.outputs.changed == 'true' }}
        run: poetry build

      # TODO: switch to official Amino Pypi account (using tim.estes@briq.com's right now)
      - name: Publish to PyPI
        if: ${{ steps.check-version.outputs.changed == 'true' }}
        uses: pypa/gh-action-pypi-publish@release/v1